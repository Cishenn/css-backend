<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cishenn.ccs.dao.SessionMapper">
    <insert id="save" parameterType="com.cishenn.ccs.entity.Session" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into session(customer_service_id,visitor_ip,visitor_name,visitor_id) values (#{cs.id},#{visitorIp},#{visitorName},#{visitorId})
    </insert>
    <update id="updateMsgCount">
        update session
        <if test="type=='cs'">
            set customer_service_msg_num = customer_service_msg_num+1
        </if>
        <if test="type=='visitor'">
            set customer_msg_num = customer_msg_num + 1
        </if>
        where id = #{sessionId}
    </update>
    <update id="closeSessionBy">
        update session set finish_time = now()
        where
        <if test="type=='visitor'">
            visitor_id = #{userName}
        </if>
        <if test="type=='cs'">
            customer_service_id = #{userName}
        </if>
        and finish_time is null
    </update>

    <select id="getSessionList" resultType="com.cishenn.ccs.entity.Session">
        select s.id,visitor_name,s.create_time,s.visitor_id,content
        from session s
        left join session_msg sm
        on sm.session_id = s.id
        where
        customer_service_id=#{customerServiceId}
        <if test="type == 1">
            and finish_time is not null
        </if>
        <if test="type == 0">
            and finish_time is null
        </if>
    </select>
<!--  在这里肯定有问题  -->
    <select id="getWithActiveStatusWithLatestMessage"
            resultType="com.cishenn.ccs.entity.SessionWithLatestMessage">
        SELECT session.*,
               session_message.sendTime AS latestMessageTime,
               session_message.content AS latestMessageContent
        FROM session
                 LEFT JOIN session_message ON session.sessionId = session_message.sessionId
        WHERE session.customerServiceId = #{customerServiceId}
        AND session.active = #{activeStatus}
        AND ((session.sessionId, session_message.sendTime) IN (
            SELECT sessionId, MAX(sendTime)
            FROM session_message
            GROUP BY sessionId
        ) OR session_message.sendTime is NULL)
        ORDER BY session_message.sendTime DESC
    </select>
</mapper>